@page "/"
@inject SessionStateService SessionState
@inject ApiClientService ApiClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using DriveShare.Frontend.Models
@using DriveShare.Frontend.Models.DTOs

<PageTitle>Home</PageTitle>

<h1>Hello, @GetGreeting()!</h1>

<p>Welcome to your new app.</p>

@if (carListings != null)
{
    <div class="row">
        @foreach (var car in carListings)
        {
            <div class="col-md-4">
                <div class="card">
                    <img src="https://via.placeholder.com/150" class="card-img-top" alt="Car image" />
                    <div class="card-body">
                        <h5 class="card-title">@car.Model</h5>
                        <p class="card-text">Year: @car.Year</p>
                        <p class="card-text">Mileage: @car.Mileage</p>
                        <p class="card-text">Location: @car.Location</p>
                        <p class="card-text">Price per day: $@car.PricePerDay</p>
                        <p class="card-text">Availability: @car.Availability</p>
                        <p class="card-text">Pick Up: @car.PickUpLocation</p>
                        <button class="btn btn-primary" @onclick="() => BookCar(car)">Book Now</button>
                        <button class="btn btn-secondary" @onclick="() => ViewDetails(car.Id)">View Details</button>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>Loading car listings...</p>
}

@code {
    private List<CarListing> carListings;

    protected override async Task OnInitializedAsync()
    {
        // Fetch car listings from the API
        if (SessionState.IsUserLoggedIn())
        {
            carListings = await ApiClient.GetAsync<List<CarListing>>("/listings/cars");
        }
    }

    private async void BookCar(CarListing car)
    {
        // Handle the booking logic here (could be a redirect to a booking page)
        Console.WriteLine($"Booking car with ID: {car.Id}");
        Console.WriteLine($"Seller ID: {car.Seller.Id}");

        // create new booking request
        var bookingRequest = new BookCarRequest
        {
            ListingId = car.Id,
            OwnerId = car.Seller.Id,
            StartDate = DateTime.Now,
            EndDate = DateTime.Now.AddDays(7)
        };

        var result = await ApiClient.PostAsync<Booking>("/bookings/bookcar", bookingRequest);
    }

    private void ViewDetails(int carId)
    {
        // Navigate to the ListingDetail page with the car ID
        NavigationManager.NavigateTo($"/listings/{carId}");
    }

    private string GetGreeting()
    {
        // If the user is logged in, display their UserId
        if (SessionState.IsUserLoggedIn())
        {
            return SessionState.UserId ?? "User";
        }
        else
        {
            return "world";
        }
    }
}
